trigger:
  branches:
    include:
      - main
      - develop
      - staging

variables:
  NODE_VERSION: '20.x'
  # Set default environment, can be overridden in pipeline variables
  TEST_ENV: 'dev'

stages:
  - stage: Build
    displayName: 'Build Stage'
    jobs:
      - job: Build
        displayName: 'Install, Lint, Build'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '$(NODE_VERSION)'
            displayName: 'Install Node.js'

          - script: |
              cd API-CRUD-Test-Playwright
              npm ci
            displayName: 'Install dependencies (with cache)'

          - script: |
              cd API-CRUD-Test-Playwright
              npm run lint
            displayName: 'Lint code'

          - script: |
              cd API-CRUD-Test-Playwright
              npm run format:check
            displayName: 'Check formatting'

          - script: |
              cd API-CRUD-Test-Playwright
              npm run build
            displayName: 'TypeScript compile'

  - stage: Test
    displayName: 'Test Stage'
    dependsOn: Build
    jobs:
      - job: Test
        displayName: 'Run Playwright API Tests'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '$(NODE_VERSION)'
            displayName: 'Install Node.js'

          - script: |
              cd API-CRUD-Test-Playwright
              npm ci
            displayName: 'Install dependencies'

          - script: |
              cd API-CRUD-Test-Playwright
              TEST_ENV=$(TEST_ENV) npx playwright install --with-deps
            displayName: 'Install Playwright browsers'

          - script: |
              cd API-CRUD-Test-Playwright
              TEST_ENV=$(TEST_ENV) npx playwright test --reporter=dot,html
            displayName: 'Run Playwright tests'

          - task: PublishTestResults@2
            condition: succeededOrFailed()
            inputs:
              testResultsFiles: 'API-CRUD-Test-Playwright/test-results/*.xml'
              testRunTitle: 'Playwright API Tests'
            displayName: 'Publish test results'

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: 'API-CRUD-Test-Playwright/playwright-report'
              ArtifactName: 'playwright-report'
            displayName: 'Publish Playwright HTML report'

  - stage: Deploy
    displayName: 'Deploy Stage'
    dependsOn: Test
    condition: succeeded('Test')
    jobs:
      - deployment: DeployToTest
        displayName: 'Deploy to Test Environment'
        environment: 'test'
        pool:
          vmImage: 'ubuntu-latest'
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                - script: echo "Deploying to test environment..."
                  displayName: 'Deploy step (replace with real deployment)'

                - script: |
                    cd API-CRUD-Test-Playwright
                    npm ci
                  displayName: 'Install dependencies'

                - script: |
                    TEST_ENV=test npx playwright test --grep @smoke
                  displayName: 'Run smoke tests'
                  workingDirectory: API-CRUD-Test-Playwright

      # Manual approval for production is handled via environment approval in Azure DevOps UI

      - deployment: DeployToProd
        displayName: 'Deploy to Production'
        environment: 'production'
        dependsOn: DeployToTest
        condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
        pool:
          vmImage: 'ubuntu-latest'
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                - script: echo "Deploying to production environment..."
                  displayName: 'Deploy step (replace with real deployment)'

                - script: |
                    cd API-CRUD-Test-Playwright
                    npm ci
                  displayName: 'Install dependencies'

                - script: |
                    TEST_ENV=prod npx playwright test --grep @smoke
                  displayName: 'Run smoke tests'
                  workingDirectory: API-CRUD-Test-Playwright